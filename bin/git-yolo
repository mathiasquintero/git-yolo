#!/usr/bin/env node

var SimpleGit = require('simple-git');
var path = process.cwd();
var fs = require('fs');
var spawn = require('cross-spawn');
var parseChangelog = require('changelog-parser');

var repository = SimpleGit(path);
var flags = process.argv.slice(2);

Array.prototype.random = function () {
    var index = Math.floor(Math.random() * this.length);
    return this[index];
};

var emojis = [
    "😱",
    "😅",
    "🤓 ",
    "😎",
    "💩",
    "🤞",
    "👊",
    "🖕",
    "🙃",
    "😉",
    "☠️",
    "😵",
    "🎉",
    "😂",
    "🔥",
    "🚀",
    "¯\\_(ツ)_/¯"
];

function hasFlag(flag) {
    return flags.indexOf(flag) >= 0;
}

function isNPMProject() {
    return fs.existsSync(path + '/package.json');
}

function bumpVersion(version) {
    if (version) {
        if (isNPMProject()) {
            spawn.sync('npm', ['version', version]);
        } else {
            repository.addTag(version, function(event) {
                console.log(event);
            });
        }
    } else {
        if (isNPMProject()) {
            spawn.sync('npm', ['version', 'major']);
        } else {
            repository.tags(function(tags) {
                var tag = tags[0];
                console.log(tag);
            });
        }
    }
}

function handleChangelogChange() {
    parseChangelog(path + '/CHANGELOG.md', function(err, changelog) {
        var latest = changelog.versions[0]
        if (!latest) return;
        var date = new Date(latest.title.replace('[' + latest.version + '] - ', ''));
        console.log(date);
    });
}

function yolo(file, callback) {
    if (file) {
        console.log("Change in: " + file);
    }

    if (hasFlag('--carpe-diem') && isNPMProject()) {
        console.log('carpe-diem on');
        spawn.sync('npm', ['version', 'major']);
    }

    var message = "YOLO!!! " + emojis.random() + (file ?  " Changed: " + file : "");
    repository
        .add('.')
        .commit(message)
        .push(['--force'], function() {
            console.log(message);
            if (callback) callback();
            if (hasFlag('--carpe-diem') && !isNPMProject()) {
                bumpVersion()
            }
        });
}

function listen() {
    var options = {
        persistent: true,
        recursive: true
    };
    fs.watch(path, options, function(event, file) {
        if (file.indexOf('.git/') < 0) yolo(file);
        if (file == 'CHANGELOG.md') handleChangelogChange();
    });
}

// This really works
console.log("Starting YOLO Mode" + (hasFlag('--carpe-diem') ? " with extra Carpe Diem™" : ""));
yolo(undefined, listen);
